---
- hosts: all
  tasks:
    - name: test connectivity
      tags: testing
      ping:

    - name: set composer_opts for dev env
      tags: always
      set_fact:
        _has_gui: (ansible_form_factor == "Notebook") or
            (ansible_form_factor == "Laptop") or
            (ansible_form_factor == "Desktop")

    - name: "install and update common packages"
      tags: packages
      apt:
        name: "{{ packages }}"
        state: latest
      become: yes
      vars:
        packages:
        - htop
        - vim
        - curl
        - zsh
        - git
        - ncdu
        - git
        - mosh

    - name: "install and update notebook packages"
      tags: packages
      apt:
        name: "{{ packages }}"
        state: latest
      become: yes
      vars:
        packages:
        - guake
        - python-psutil
        - git-cola
        - bless
        - meld
        - gedit
      when: _has_gui

    - name: 'Set guake keybind'
      tags: dconf
      dconf:
        key: "/apps/guake/keybindings/global/show-hide"
        value: "'<Alt>bar'"
        state: present
      when: _has_gui

    - name: 'Install Google Chomre from the internet and set as default'
      tags: chrome
      block:
        - apt:
            deb: 'https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb'
        - alternatives:
            name: "{{ item.name }}"
            path: "{{ item.path }}"
          loop:
            - { name: 'gnome-www-browser', path: '/usr/bin/google-chrome-stable' }
            - { name: 'x-www-browser',     path: '/usr/bin/google-chrome-stable' }
          loop_control:
            label: "{{ item.name }} set to google-chrome-stable_"
      become: yes
      when: _has_gui

    - name: "copy dotfiles"
      tags: dotfiles
      copy:
        backup: yes
        owner: "{{ansible_user_id}}"
        group: "{{ansible_user_id}}"
        mode: u=rw,g=r,o=
        src: "templates/{{item}}"
        dest: "{{ansible_env['HOME']}}/.{{item}}"
      loop:
        - vimrc
        - gitconfig
        - pushover.conf

    - name: cleanup erroneous files
      tags: cleanup
      file:
        state: absent
        path: "{{ansible_env['HOME']}}/.pushover"

    # consider replacing with authorized_key
    - name: "add ssh keys"
      tags: sshkeys
      lineinfile:
        path: "{{ansible_env['HOME']}}/.ssh/authorized_keys"
        create: yes
        backup: yes
        owner: "{{ansible_user_id}}"
        group: "{{ansible_user_id}}"
        mode: u=rw,g=r,o=
        state: present
        line: "{{ item }}"
      loop: "{{ query('lines', 'cat pubkeys.list') }}"
      loop_control:
          label: "{{ item.split(' ')[0] }} {{ item.split(' ')[2] }}"

    - name: "add ssh know_hosts"
      tags: hostkeys
      lineinfile:
        path: "{{ansible_env['HOME']}}/.ssh/known_hosts"
        create: yes
        backup: yes
        owner: "{{ansible_user_id}}"
        group: "{{ansible_user_id}}"
        mode: u=rw,g=r,o=
        state: present
        line: "{{ item }}"
      loop: "{{ query('lines', 'cat hostkeys.list') }}"
      loop_control:
          label: "{{ item.split(' ')[0:2] | join(' ') }}"

    - name: 'Check that user has ed25519 SSH key. Add to github if new.'
      tags: create_shhkeys
      block:
        - user:
            name: "{{ansible_user_id}}"
            generate_ssh_key: yes
            ssh_key_type: ed25519
            ssh_key_comment: "{{ansible_user_id}}@{{ansible_nodename}} - ansible auto generated"
          register: user_key

    - name: 'Upload ed25519 to Github'
      local_action:
        # We run til as a local action so we only use the API from one IP
        module: github_key
        name: "{{ansible_user_id}}@{{ansible_nodename}}"
        token: "{{ github_token_admin_public_key }}"
        pubkey: '{{ user_key.ssh_public_key }}'

    - name: "checkout random-rantings"
      tags: repos
      git:
        repo: "git@github.com:Kagee/random-rantings.git"
        dest: "{{ansible_env['HOME']}}/bin/random-rantings"
